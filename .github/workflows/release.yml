name: Release

on:
  workflow_call:
    inputs:
      version:
        type: string
        description: 'Version to release'
        required: true

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Get vsix
        uses: actions/download-artifact@v3
        with:
          name: developer-platform-vscode-chat

      - name: Release
        if: ${{ github.event_name != 'pull_request' }}
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');

            const releaseResult = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: 'v${{ inputs.version }}',
              name: 'v${{ inputs.version }}',
              generate_release_notes: true,
              prerelease: false,
            });

            const release = releaseResult.data;

            const globber = await glob.create('*.vsix');

            for await (const file of globber.globGenerator()) {
              const uploadResult = await github.rest.repos.uploadReleaseAsset({
                owner: context.repo.owner,
                repo: context.repo.repo,
                release_id: release.id,
                name: file.split('/').pop(),
                data: fs.readFileSync(file),
              });
            }
